# -*- coding: UTF-8 -*-
#算数运算符
'''
+	加 - 两个对象相加
-	减 - 得到负数或是一个数减去另一个数
*	乘 - 两个数相乘或是返回一个被重复若干次的字符串
/	除 - x除以y  整数除整数 得到整数。 如果要得到小数部分，把其中一个数改成浮点数即可。
%	取模 - 返回除法的余数	
**	幂 - 返回x的y次幂 10**20 为10的20次方
//	取整除 - 返回商的整数部分（向下取整）	9//2 输出结果 4 , 9.0//2.0 输出结果 4.0
'''

#比较运算符
'''
==	等于 - 比较对象是否相等
!=	不等于 - 比较两个对象是否不相等
<>	不等于 - 比较两个对象是否不相等
>	大于 - 返回x是否大于y
<	小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。	rue。
>=	大于等于
<=	小于等于
'''

#赋值运算符
'''
=	简单的赋值运算符	
+=	加法赋值运算符
-=	减法赋值运算符
*=	乘法赋值运算符
/=	除法赋值运算符
%=	取模赋值运算符
**=	幂赋值运算符	c **= a 等效于 c = c ** a
//=	取整除赋值运算符	c //= a 等效于 c = c // a
'''

#逻辑运算符
'''
and	x and y	布尔"与"
or	x or y	布尔"或"
not	not x	布尔"非"
'''

#位运算符
'''
&	按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0
|	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。
^	按位异或运算符：当两对应的二进位相异时，结果为1	(
~	按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1 
<<	左移动运算符：运算数的各二进位全部左移若干位，由 << 右边的数字指定了移动的位数，高位丢弃，低位补0。	
>>	右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，>> 右边的数字指定了移动的位数	
'''

#成员运算符
'''
判断字符串，数组，元祖中是否包含指定项。
in	如果在指定的序列中找到值返回 True，否则返回 False。
not in	如果在指定的序列中没有找到值返回 True，否则返回 False。
'''

#身份运算符
'''
is	is 是判断两个标识符是不是引用自一个对象	x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False
is not	is not 是判断两个标识符是不是引用自不同对象	x is not y ， 类似 id(a) != id(b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。

is 与 == 区别：
is 用于判断两个变量引用对象是否为同一个， == 用于判断引用变量的值是否相等
'''
# a = 20
# b = 20
# print a is b  #True, a和b引用同一个对象。20.


#运算符优先级
'''
这个没必要记，多个运算符时，分行，加括号。
提高代码可读性。
'''